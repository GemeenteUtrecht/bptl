# Inspired by https://docs.docker.com/compose/django/
version: '3'

services:
  db:
    # NOTE: No persistance storage configured.
    # See: https://hub.docker.com/_/postgres/
    image: postgres:13
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    # NOTE: this works for bitnami, not sure if this works for regular
    # postgres image
    volumes:
      - "postgres-storage:/var/lib/postgres/data"
      - ./docker-init-db.sql:/docker-entrypoint-initdb.d/init_db.sql

  web:
    build: .
    image: scrumteamzgw/bptl:${IMAGE_TAG:-latest}
    environment: &web_env
      - DJANGO_SETTINGS_MODULE=bptl.conf.docker
      - SECRET_KEY=${SECRET_KEY:-8n47ma!3%cfdm3cgt)@1ozjo7+^!j+z18@+0f-2+!p6ba^kof_}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CELERY_LOGLEVEL=DEBUG
    ports:
      - 8000:8000
    depends_on:
      - db

  redis:
    image: redis:5

  celery:
    build: .
    environment: *web_env
    command: /celery_worker.sh
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    environment: *web_env
    command: /celery_beat.sh
    depends_on:
      - db
      - redis

  celery-flower:
    image: mher/flower
    environment: *web_env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - celery

  # camunda
  mysql:
    image: mariadb:10.5-bionic
    command: [
      '--wait_timeout=28800'
    ]
    volumes:
      - "mysql-storage:/var/lib/mysql"
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=camunda
      - MYSQL_USER=camunda
      - MYSQL_PASSWORD=camunda

  camunda:
    image: scrumteamzgw/camunda:latest
    environment:
      - DB_DRIVER=com.mysql.jdbc.Driver
      - DB_URL=jdbc:mysql://mysql:3306/camunda?autoReconnect=true
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - DB_VALIDATE_ON_BORROW="true"
      - WAIT_FOR=mysql:3306
    ports:
      - "8080:8080"
    depends_on:
      - mysql

  nginx:
    image: docker.io/library/nginx:latest
    volumes:
      - ./bptl.conf:/etc/nginx/conf.d/default.conf
    network_mode: host
    environment:
      - NGINX_PORT=8000

volumes:
  mysql-storage:
  postgres-storage:
