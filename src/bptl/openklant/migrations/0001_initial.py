# Generated by Django 3.2.12 on 2025-03-20 15:41

import bptl.tasks.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("zgw_consumers", "0012_auto_20210104_1039"),
        ("tasks", "0012_taskmapping_engine_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="OpenKlantActorModel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        error_messages={
                            "unique": "An Actor with that name already exists."
                        },
                        help_text="Required. 200 characters or fewer.",
                        max_length=200,
                        verbose_name="naam",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=None,
                        help_text="UUID of the Actor associated with the BPTL within OpenKlant",
                        null=True,
                        verbose_name="Actor UUID",
                    ),
                ),
            ],
            options={
                "verbose_name": "OpenKlant actor",
            },
        ),
        migrations.CreateModel(
            name="OpenKlantInternalTaskModel",
            fields=[
                (
                    "basetask_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="tasks.basetask",
                    ),
                ),
                (
                    "worker_id",
                    models.CharField(
                        default=bptl.tasks.utils.get_worker_id,
                        help_text="The worker ID that picked up the task. Only the same worker ID is allowed to unlock/modify the task. Used as a lock.",
                        max_length=255,
                    ),
                ),
                (
                    "task_uuid",
                    models.CharField(max_length=50, verbose_name="task uuid"),
                ),
                (
                    "openklant_error",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="openklant error",
                    ),
                ),
            ],
            options={
                "verbose_name": "openklant internal task",
                "verbose_name_plural": "openklant internal tasks",
            },
            bases=("tasks.basetask",),
        ),
        migrations.CreateModel(
            name="OpenKlantConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        help_text="Actor associated with BPTL in OpenKlant.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="openklant.openklantactormodel",
                        verbose_name="OpenKlant Actor",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        help_text="External service to configure credentials for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="zgw_consumers.service",
                        verbose_name="service",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
