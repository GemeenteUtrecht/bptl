openapi: 3.0.3
info:
  title: Objecttypes API
  version: 2.0.0 (v2)
  description: |+
    An API to manage Object types.

    # Introduction

    An OBJECTTYPE represents a collection of objects of similar form and/or function.
    An OBJECTTYPE includes a definition of an object, represented as a JSON schema, and
    metadata attributes. Metadata is stored on the top level and the JSON schema itself is stored
    in VERSIONs because the definition of an object can change over time.

    ## Versions

    Over time, an OBJECTTYPE can also change. This is reflected with VERSIONs.

    A VERSION contains the JSON schema of an OBJECTTYPE at a certain time. Each
    OBJECTTYPE can have several VERSIONs. A VERSION can have the `status` "draft" or "published".
    Only draft VERSIONs are allowed to be changed. Once a VERSION is published
    it becomes immutable, and if changes are still required a new VERSION should be created.

    ## JSON schema validation

    OBJECTTYPEs are created to ensure that OBJECTs in the Objects API have the same
    well defined structure. The JSON schema makes this possible.
    The Objects API retrieves the related OBJECTTYPE and validates the object data against
    the JSON schema in the appropriate VERSION of the OBJECTTYPE.

    **Useful links**

    * [JSON schema](https://json-schema.org/)

  contact:
    url: https://github.com/maykinmedia/objecttypes-api
  license:
    name: EUPL-1.2
paths:
  /objecttypes:
    get:
      operationId: objecttype_list
      description: ''
      parameters:
      - in: query
        name: dataClassification
        schema:
          type: string
          enum:
          - confidential
          - intern
          - open
          - strictly_confidential
        description: Confidential level of the object type
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectTypeList'
          description: OK
    post:
      operationId: objecttype_create
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectType'
          description: Created
  /objecttypes/{objecttype_uuid}/versions:
    get:
      operationId: objectversion_list
      description: ''
      parameters:
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectVersionList'
          description: OK
    post:
      operationId: objectversion_create
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectVersion'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectVersion'
          description: Created
  /objecttypes/{objecttype_uuid}/versions/{version}:
    get:
      operationId: objectversion_read
      description: ''
      parameters:
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      - in: path
        name: version
        schema:
          type: integer
          maximum: 32767
          description: Integer version of the OBJECTTYPE
        required: true
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectVersion'
          description: OK
    put:
      operationId: objectversion_update
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      - in: path
        name: version
        schema:
          type: integer
          maximum: 32767
          description: Integer version of the OBJECTTYPE
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectVersion'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectVersion'
          description: OK
    patch:
      operationId: objectversion_partial_update
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      - in: path
        name: version
        schema:
          type: integer
          maximum: 32767
          description: Integer version of the OBJECTTYPE
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObjectVersion'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectVersion'
          description: OK
    delete:
      operationId: objectversion_delete
      description: ''
      parameters:
      - in: path
        name: objecttype_uuid
        schema:
          type: string
          format: uuid
        description: Unique identifier (UUID4)
        required: true
      - in: path
        name: version
        schema:
          type: integer
          maximum: 32767
          description: Integer version of the OBJECTTYPE
        required: true
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /objecttypes/{uuid}:
    get:
      operationId: objecttype_read
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        required: true
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectType'
          description: OK
    put:
      operationId: objecttype_update
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectType'
          description: OK
    patch:
      operationId: objecttype_partial_update
      description: ''
      parameters:
      - in: header
        name: Content-Type
        schema:
          type: string
          enum:
          - application/json
        description: Content type of the request body.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        required: true
      tags:
      - Objecttypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedObjectType'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectType'
          description: OK
    delete:
      operationId: objecttype_delete
      description: ''
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        required: true
      tags:
      - Objecttypes
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    DataClassificationEnum:
      enum:
      - open
      - intern
      - confidential
      - strictly_confidential
      type: string
    ObjectType:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1000
          description: URL reference to this object. This is the unique identification
            and location of this object.
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        name:
          type: string
          description: Name of the object type
          maxLength: 100
        namePlural:
          type: string
          description: Plural name of the object type
          maxLength: 100
        description:
          type: string
          description: The description of the object type
          maxLength: 1000
        dataClassification:
          allOf:
          - $ref: '#/components/schemas/DataClassificationEnum'
          description: Confidential level of the object type
        maintainerOrganization:
          type: string
          description: Organization which is responsible for the object type
          maxLength: 200
        maintainerDepartment:
          type: string
          description: Business department which is responsible for the object type
          maxLength: 200
        contactPerson:
          type: string
          description: Name of the person in the organization who can provide information
            about the object type
          maxLength: 200
        contactEmail:
          type: string
          description: Email of the person in the organization who can provide information
            about the object type
          maxLength: 200
        source:
          type: string
          description: Name of the system from which the object type originates
          maxLength: 200
        updateFrequency:
          allOf:
          - $ref: '#/components/schemas/UpdateFrequencyEnum'
          description: Indicates how often the object type is updated
        providerOrganization:
          type: string
          description: Organization which is responsible for publication of the object
            type
          maxLength: 200
        documentationUrl:
          type: string
          format: uri
          description: Link to the documentation for the object type
          maxLength: 200
        labels:
          type: object
          additionalProperties: {}
          description: Key-value pairs of keywords related for the object type
        createdAt:
          type: string
          format: date
          readOnly: true
          description: Date when the object type was created
        modifiedAt:
          type: string
          format: date
          readOnly: true
          description: Last date when the object type was modified
        versions:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: list of URLs for the OBJECTTYPE versions
      required:
      - name
      - namePlural
    ObjectVersion:
      type: object
      description: |-
        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead
        of primary key relationships.  Specifically:

        * A 'url' field is included instead of the 'id' field.
        * Relationships to other instances are hyperlinks, instead of primary keys.

        NOTE: this only works with DRF 3.1.0 and above.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        version:
          type: integer
          readOnly: true
          description: Integer version of the OBJECTTYPE
        objectType:
          type: string
          format: uri
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Status of the object type version
        jsonSchema:
          type: object
          additionalProperties: {}
          title: JSON schema
          description: JSON schema for Object validation
        createdAt:
          type: string
          format: date
          readOnly: true
          description: Date when the version was created
        modifiedAt:
          type: string
          format: date
          readOnly: true
          description: Last date when the version was modified
        publishedAt:
          type: string
          format: date
          readOnly: true
          title: Published_at
          description: Date when the version was published
    PaginatedObjectTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObjectType'
    PaginatedObjectVersionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersion'
    PatchedObjectType:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          maxLength: 1000
          description: URL reference to this object. This is the unique identification
            and location of this object.
          readOnly: true
        uuid:
          type: string
          format: uuid
          description: Unique identifier (UUID4)
        name:
          type: string
          description: Name of the object type
          maxLength: 100
        namePlural:
          type: string
          description: Plural name of the object type
          maxLength: 100
        description:
          type: string
          description: The description of the object type
          maxLength: 1000
        dataClassification:
          allOf:
          - $ref: '#/components/schemas/DataClassificationEnum'
          description: Confidential level of the object type
        maintainerOrganization:
          type: string
          description: Organization which is responsible for the object type
          maxLength: 200
        maintainerDepartment:
          type: string
          description: Business department which is responsible for the object type
          maxLength: 200
        contactPerson:
          type: string
          description: Name of the person in the organization who can provide information
            about the object type
          maxLength: 200
        contactEmail:
          type: string
          description: Email of the person in the organization who can provide information
            about the object type
          maxLength: 200
        source:
          type: string
          description: Name of the system from which the object type originates
          maxLength: 200
        updateFrequency:
          allOf:
          - $ref: '#/components/schemas/UpdateFrequencyEnum'
          description: Indicates how often the object type is updated
        providerOrganization:
          type: string
          description: Organization which is responsible for publication of the object
            type
          maxLength: 200
        documentationUrl:
          type: string
          format: uri
          description: Link to the documentation for the object type
          maxLength: 200
        labels:
          type: object
          additionalProperties: {}
          description: Key-value pairs of keywords related for the object type
        createdAt:
          type: string
          format: date
          readOnly: true
          description: Date when the object type was created
        modifiedAt:
          type: string
          format: date
          readOnly: true
          description: Last date when the object type was modified
        versions:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: list of URLs for the OBJECTTYPE versions
    PatchedObjectVersion:
      type: object
      description: |-
        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead
        of primary key relationships.  Specifically:

        * A 'url' field is included instead of the 'id' field.
        * Relationships to other instances are hyperlinks, instead of primary keys.

        NOTE: this only works with DRF 3.1.0 and above.
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        version:
          type: integer
          readOnly: true
          description: Integer version of the OBJECTTYPE
        objectType:
          type: string
          format: uri
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: Status of the object type version
        jsonSchema:
          type: object
          additionalProperties: {}
          title: JSON schema
          description: JSON schema for Object validation
        createdAt:
          type: string
          format: date
          readOnly: true
          description: Date when the version was created
        modifiedAt:
          type: string
          format: date
          readOnly: true
          description: Last date when the version was modified
        publishedAt:
          type: string
          format: date
          readOnly: true
          title: Published_at
          description: Date when the version was published
    StatusEnum:
      enum:
      - published
      - draft
      - deprecated
      type: string
    UpdateFrequencyEnum:
      enum:
      - real_time
      - hourly
      - daily
      - weekly
      - monthly
      - yearly
      - unknown
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
tags:
- name: Objecttypes
externalDocs:
  url: https://objects-and-objecttypes-api.readthedocs.io/
servers:
- url: /api/v2